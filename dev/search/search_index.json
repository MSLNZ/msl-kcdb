{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Search the key comparison database, KCDB, that is provided by the International Bureau of Weights and Measures, BIPM.</p>"},{"location":"#install","title":"Install","text":"<p><code>msl-kcdb</code> is available for installation via the Python Package Index and may be installed with pip</p> <pre><code>pip install msl-kcdb\n</code></pre>"},{"location":"#user-guide","title":"User Guide","text":"<p>Three classes are available to search the three metrology domains</p> <ul> <li><code>ChemistryBiology</code> \u2014 Search the Chemistry and Biology database</li> <li><code>IonizingRadiation</code> \u2014 Search the Ionizing Radiation database</li> <li><code>Physics</code> \u2014 Search the General Physics database</li> </ul> <p>See the examples on how to use each of these classes to extract information from the KCDB. The example scripts are also available in the <code>msl-kcdb</code> repository.</p>"},{"location":"license/","title":"License","text":"<pre><code>MIT License\n\nCopyright (c) 2025, Measurement Standards Laboratory of New Zealand\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"release-notes/","title":"Release Notes","text":""},{"location":"release-notes/#010-in-development","title":"0.1.0 (in development)","text":""},{"location":"api/chemistry_biology/","title":"Chemistry and Biology","text":"<p>Search the Chemistry and Biology database.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology","title":"ChemistryBiology","text":"<pre><code>ChemistryBiology(timeout=30)\n</code></pre> <p>               Bases: <code>KCDB</code></p> <p>Chemistry and Biology class.</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float | None</code> <p>The maximum number of seconds to wait for a response from the KCDB server.</p> <code>30</code>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.BASE_URL","title":"BASE_URL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BASE_URL = 'https://www.bipm.org/api/kcdb'\n</code></pre> <p>The base url to the KCDB API.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.DOMAIN","title":"DOMAIN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DOMAIN = Domain(\n    code=\"CHEM-BIO\", name=\"Chemistry and Biology\"\n)\n</code></pre> <p>The Chemistry and Biology domain.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.MAX_PAGE_SIZE","title":"MAX_PAGE_SIZE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MAX_PAGE_SIZE = 10000\n</code></pre> <p>The maximum number of elements that can be returned in a single KCDB request.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.timeout","title":"timeout  <code>property</code> <code>writable</code>","text":"<pre><code>timeout\n</code></pre> <p>The timeout value, in seconds, to use for a KCDB request.</p> <p>Returns:</p> Type Description <code>float | None</code> <p>The maximum number of seconds to wait for a response from the KCDB server. If <code>None</code>, there is no timeout.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.analytes","title":"analytes","text":"<pre><code>analytes()\n</code></pre> <p>Return all Chemistry and Biology analytes.</p> <p>Returns:</p> Type Description <code>list[Analyte]</code> <p>A list of Analytes.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.categories","title":"categories","text":"<pre><code>categories()\n</code></pre> <p>Return all Chemistry and Biology categories.</p> <p>Returns:</p> Type Description <code>list[Category]</code> <p>A list of Category's.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.countries","title":"countries","text":"<pre><code>countries()\n</code></pre> <p>Return all countries.</p> <p>Returns:</p> Type Description <code>list[Country]</code> <p>A list of Country's.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.domains","title":"domains","text":"<pre><code>domains()\n</code></pre> <p>Return all KCDB domains.</p> <p>Returns:</p> Type Description <code>list[Domain]</code> <p>A list of Domains.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.filter","title":"filter  <code>staticmethod</code>","text":"<pre><code>filter(data, pattern, *, flags=0)\n</code></pre> <p>Filter the reference data based on a pattern search.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Iterable[T]</code> <p>An iterable of a ReferenceData subclass.</p> required <code>pattern</code> <code>str</code> <p>A regular-expression pattern to use to filter results. Uses the <code>label</code> and <code>value</code> attributes of each item in <code>data</code> to perform the filtering.</p> required <code>flags</code> <code>int</code> <p>Pattern flags passed to re.compile.</p> <code>0</code> <p>Returns:</p> Type Description <code>list[T]</code> <p>The filtered reference data.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.get","title":"get","text":"<pre><code>get(url, *, json=None, params=None)\n</code></pre> <p>Send a GET request to the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL for the request.</p> required <code>json</code> <code>dict[str, bool | int | str | list[str]] | None</code> <p>A JSON-serializable object to include in the body of the request.</p> <code>None</code> <code>params</code> <code>dict[str, int | str] | None</code> <p>Query parameters to include in the URL.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>The response.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.metrology_areas","title":"metrology_areas","text":"<pre><code>metrology_areas()\n</code></pre> <p>Return all metrology areas.</p> <p>Returns:</p> Type Description <code>list[MetrologyArea]</code> <p>A list of MetrologyAreas.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.non_ionizing_quantities","title":"non_ionizing_quantities","text":"<pre><code>non_ionizing_quantities()\n</code></pre> <p>Return all non-Ionizing Radiation quantities.</p> <p>Returns:</p> Type Description <code>list[NonIonizingQuantity]</code> <p>A list of NonIonizingQuantity's.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.post","title":"post","text":"<pre><code>post(url, *, json=None, params=None)\n</code></pre> <p>Send a POST request to the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL for the request.</p> required <code>json</code> <code>dict[str, bool | int | str | list[str]] | None</code> <p>A JSON-serializable object to include in the body of the request.</p> <code>None</code> <code>params</code> <code>dict[str, int | str] | None</code> <p>Query parameters to include in the URL.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>The response.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.quick_search","title":"quick_search","text":"<pre><code>quick_search(\n    *,\n    excluded_filters=None,\n    included_filters=None,\n    keywords=None,\n    page=0,\n    page_size=100,\n    show_table=False\n)\n</code></pre> <p>Perform a quick search.</p> <p>Parameters:</p> Name Type Description Default <code>excluded_filters</code> <code>Iterable[str] | None</code> <p>Excluded filters. Example: <code>[\"cmcServices.AC current\", \"cmcServices.AC power\"]</code></p> <code>None</code> <code>included_filters</code> <code>Iterable[str] | None</code> <p>Included filters. Example: <code>[\"cmcDomain.CHEM-BIO\", \"cmcBranches.Dimensional metrology\"]</code></p> <code>None</code> <code>keywords</code> <code>str | None</code> <p>Search keywords in elasticsearch format. Example: <code>\"phase OR test\"</code></p> <code>None</code> <code>page</code> <code>int</code> <p>Page number requested (0 means first page).</p> <code>0</code> <code>page_size</code> <code>int</code> <p>Maximum number of elements in a page (maximum value is 10000).</p> <code>100</code> <code>show_table</code> <code>bool</code> <p>Set to <code>True</code> to return table data.</p> <code>False</code> <p>Returns:</p> Type Description <code>ResultsQuickSearch</code> <p>The CMC quick-search results.</p>"},{"location":"api/chemistry_biology/#msl.kcdb.chemistry_biology.ChemistryBiology.search","title":"search","text":"<pre><code>search(\n    *,\n    analyte=None,\n    category=None,\n    countries=None,\n    keywords=None,\n    metrology_area=\"QM\",\n    page=0,\n    page_size=100,\n    public_date_from=None,\n    public_date_to=None,\n    show_table=False\n)\n</code></pre> <p>Perform a Chemistry and Biology search.</p> <p>Parameters:</p> Name Type Description Default <code>analyte</code> <code>str | Analyte | None</code> <p>Analyte label. Example: <code>\"antimony\"</code></p> <code>None</code> <code>category</code> <code>str | Category | None</code> <p>Category label. Example: <code>\"5\"</code></p> <code>None</code> <code>countries</code> <code>str | Country | Iterable[str | Country] | None</code> <p>Country label(s). Example: <code>[\"CH\", \"FR\", \"JP\"]</code></p> <code>None</code> <code>keywords</code> <code>str | None</code> <p>Search keywords in elasticsearch format. Example: <code>\"phase OR multichannel OR water\"</code></p> <code>None</code> <code>metrology_area</code> <code>str | MetrologyArea</code> <p>Metrology area label. Example: <code>\"QM\"</code></p> <code>'QM'</code> <code>page</code> <code>int</code> <p>Page number requested (0 means first page).</p> <code>0</code> <code>page_size</code> <code>int</code> <p>Maximum number of elements in a page (maximum value is 10000).</p> <code>100</code> <code>public_date_from</code> <code>str | date | None</code> <p>Minimal publication date. Example: <code>\"2005-01-31\"</code></p> <code>None</code> <code>public_date_to</code> <code>str | date | None</code> <p>Maximal publication date. Example: <code>\"2020-06-30\"</code></p> <code>None</code> <code>show_table</code> <code>bool</code> <p>Set to <code>True</code> to return table data.</p> <code>False</code> <p>Returns:</p> Type Description <code>ResultsChemistryBiology</code> <p>The CMC results for Chemistry and Biology.</p>"},{"location":"api/classes/","title":"Reference Data and Results","text":"<p>Reference data and Results classes for the KCDB API.</p>"},{"location":"api/classes/#msl.kcdb.classes.AbsoluteRelative","title":"AbsoluteRelative","text":"<p>               Bases: <code>Enum</code></p> <p>CRM uncertainty mode.</p> <p>Attributes:</p> Name Type Description <code>ABSOLUTE</code> <code>str</code> <p><code>\"Absolute\"</code></p> <code>RELATIVE</code> <code>str</code> <p><code>\"Relative\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Analyte","title":"Analyte  <code>dataclass</code>","text":"<pre><code>Analyte(id, label, value)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>An analyte of Chemistry and Biology.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Analyte identity. Example: 1</p> <code>label</code> <code>str</code> <p>Analyte label. Example: <code>\"nitrogen\"</code></p> <code>value</code> <code>str</code> <p>Analyte value. Example: <code>\"nitrogen\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Branch","title":"Branch  <code>dataclass</code>","text":"<pre><code>Branch(id, label, value, metrology_area)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A branch of General Physics or Ionizing Radiation.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Branch identity. Example: 21</p> <code>label</code> <code>str</code> <p>Branch label. Example: <code>\"PR/Fibre\"</code></p> <code>metrology_area</code> <code>MetrologyArea</code> <p>The metrology area that the branch belongs to.</p> <code>value</code> <code>str</code> <p>Branch value. Example: <code>\"Fibre optics\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Category","title":"Category  <code>dataclass</code>","text":"<pre><code>Category(id, label, value)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A category of Chemistry and Biology.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Category identity. Example: 8</p> <code>label</code> <code>str</code> <p>Category label. Example: <code>\"2\"</code></p> <code>value</code> <code>str</code> <p>Category value. Example: <code>\"Inorganic solutions\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Country","title":"Country  <code>dataclass</code>","text":"<pre><code>Country(id, label, value)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>Information about a country.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Country identity. Example: 58</p> <code>label</code> <code>str</code> <p>Country label. Example: <code>\"NZ\"</code></p> <code>value</code> <code>str</code> <p>Country value. Example: <code>\"New Zealand\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Domain","title":"Domain  <code>dataclass</code>","text":"<pre><code>Domain(code, name)\n</code></pre> <p>The domain of either General Physics, Chemistry and Biology or Ionizing Radiation.</p> <p>Attributes:</p> Name Type Description <code>code</code> <code>str</code> <p>Domain code. Example: <code>\"PHYSICS\"</code></p> <code>name</code> <code>str</code> <p>Domain name. Example: <code>\"General physics\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.IndividualService","title":"IndividualService  <code>dataclass</code>","text":"<pre><code>IndividualService(\n    id, label, value, physics_code, sub_service\n)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>An individual service of General Physics.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Individual service identity. Example: 225</p> <code>label</code> <code>str</code> <p>Individual service label. Example: <code>\"1\"</code></p> <code>physics_code</code> <code>str</code> <p>The physics code for this individual service. Example: <code>\"11.1.1\"</code></p> <code>sub_service</code> <code>SubService</code> <p>The sub service that the individual service belongs to.</p> <code>value</code> <code>str</code> <p>Individual service value. Example: <code>\"Absolute power in coaxial line\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Medium","title":"Medium  <code>dataclass</code>","text":"<pre><code>Medium(id, label, value, branch)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A medium of Ionizing Radiation.</p> <p>Attributes:</p> Name Type Description <code>branch</code> <code>Branch</code> <p>The branch that the medium belongs to.</p> <code>id</code> <code>int</code> <p>Medium identity. Example: 5</p> <code>label</code> <code>str</code> <p>Medium label. Example: <code>\"5\"</code></p> <code>value</code> <code>str</code> <p>Medium value. Example: <code>\"Aerosol\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.MetrologyArea","title":"MetrologyArea  <code>dataclass</code>","text":"<pre><code>MetrologyArea(id, label, value, domain)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A metrology area of a domain.</p> <p>Attributes:</p> Name Type Description <code>domain</code> <code>Domain</code> <p>The domain that the metrology area belongs to.</p> <code>id</code> <code>int</code> <p>Metrology area identity. Example: 2</p> <code>label</code> <code>str</code> <p>Metrology area label. Example: <code>\"EM\"</code></p> <code>value</code> <code>str</code> <p>Metrology area value. Example: <code>\"Electricity and Magnetism\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.NonIonizingQuantity","title":"NonIonizingQuantity  <code>dataclass</code>","text":"<pre><code>NonIonizingQuantity(id, label, value)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A quantity that is not Ionizing Radiation.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Non-ionizing identity. Example: 109</p> <code>label</code> <code>str</code> <p>Always an empty string. Example: <code>\"\"</code></p> <code>value</code> <code>str</code> <p>Non-ionizing value. Example: <code>\"Absorbance, regular, spectral\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Nuclide","title":"Nuclide  <code>dataclass</code>","text":"<pre><code>Nuclide(id, label, value)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A nuclide of Ionizing Radiation.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Nuclide identity. Example: 1</p> <code>label</code> <code>str</code> <p>Nuclide label. Example: <code>\"C-14\"</code></p> <code>value</code> <code>str</code> <p>Nuclide value. Example: <code>\"C-14\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Quantity","title":"Quantity  <code>dataclass</code>","text":"<pre><code>Quantity(id, label, value, branch)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A quantity of Ionizing Radiation.</p> <p>Attributes:</p> Name Type Description <code>branch</code> <code>Branch</code> <p>The branch that the quantity belongs to.</p> <code>id</code> <code>int</code> <p>Quantity identity. Example: 1</p> <code>label</code> <code>str</code> <p>Quantity label. Example: <code>\"1\"</code></p> <code>value</code> <code>str</code> <p>Quantity value. Example: <code>\"Absorbed dose/rate to air\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.ReferenceData","title":"ReferenceData  <code>dataclass</code>","text":"<pre><code>ReferenceData(id, label, value)\n</code></pre> <p>Base class for reference data.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Reference data identity. Example: 8</p> <code>label</code> <code>str</code> <p>Reference data label. Example: <code>\"QM\"</code></p> <code>value</code> <code>str</code> <p>Reference data value. Example: <code>\"Chemistry and Biology\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.ResultAggregation","title":"ResultAggregation","text":"<pre><code>ResultAggregation(kwargs)\n</code></pre> <p>Aggregation representation.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>Aggregation name. Example: <code>\"cmcCountries\"</code></p> <code>values</code> <code>list[str]</code> <p>Aggregation values. Example: <code>[\"Kazakhstan\", \"Portugal\", \"Greece\"]</code></p>"},{"location":"api/classes/#msl.kcdb.classes.ResultChemistryBiology","title":"ResultChemistryBiology","text":"<pre><code>ResultChemistryBiology(kwargs)\n</code></pre> <p>               Bases: <code>ResultCommon</code></p> <p>Chemistry and Biology result.</p> <p>Attributes:</p> Name Type Description <code>analyte_matrix</code> <code>str</code> <p>Analyte matrix. Example: <code>\"high purity antimony\"</code></p> <code>analyte_value</code> <code>str</code> <p>Analyte value. Example: <code>\"antimony\"</code></p> <code>approval_date</code> <code>str</code> <p>Approval date (YYYY-MM-DD).</p> <code>category_value</code> <code>str</code> <p>Category value. Example: <code>\"High purity chemicals\"</code></p> <code>cmc</code> <code>ResultUnit | None</code> <p>CMC result unit.</p> <code>cmc_base_unit</code> <code>ResultUnit | None</code> <p>CMC base unit.</p> <code>cmc_uncertainty</code> <code>ResultUnit | None</code> <p>CMC uncertainty.</p> <code>cmc_uncertainty_base_unit</code> <code>ResultUnit | None</code> <p>CMC uncertainty base unit.</p> <code>comments</code> <code>str</code> <p>Comments.</p> <code>confidence_level</code> <code>float | None</code> <p>Confidence level.</p> <code>country_value</code> <code>str</code> <p>Country full name. Example: <code>\"China\"</code></p> <code>coverage_factor</code> <code>float | None</code> <p>Coverage factor.</p> <code>crm</code> <code>ResultUnit | None</code> <p>CRM unit.</p> <code>crm_confidence_level</code> <code>float | None</code> <p>CRM confidence level.</p> <code>crm_coverage_factor</code> <code>float | None</code> <p>CRM coverage factor.</p> <code>crm_uncertainty</code> <code>ResultUnit | None</code> <p>CRM uncertainty.</p> <code>crm_uncertainty_equation</code> <code>ResultEquation | None</code> <p>CRM uncertainty equation.</p> <code>crm_uncertainty_mode</code> <code>AbsoluteRelative | None</code> <p>CRM uncertainty mode.</p> <code>crm_uncertainty_table</code> <code>ResultTable | None</code> <p>CRM uncertainty table.</p> <code>domain_code</code> <code>str</code> <p>Domain code. Example: <code>\"CHEM-BIO\"</code></p> <code>group_identifier</code> <code>str</code> <p>Group identifier.</p> <code>id</code> <code>int</code> <p>Document database id.</p> <code>kcdb_code</code> <code>str</code> <p>Document KCDB code. Example: <code>\"APMP-QM-CN-00000JZR-1\"</code></p> <code>measurement_technique</code> <code>str</code> <p>Measurement technique. Example: <code>\"Liquid-solid extraction with SPE cleanup and bracketing LC-IDMS/MS\"</code></p> <code>mechanism</code> <code>str</code> <p>Mechanism. Example: <code>\"Customer service; GD-MS-200; delivery only to other NMIs\"</code></p> <code>metrology_area_label</code> <code>str</code> <p>Metrology area label. Example: <code>\"QM\"</code></p> <code>nmi_code</code> <code>str</code> <p>NMI code. Example: <code>\"NIM\"</code></p> <code>nmi_name</code> <code>str</code> <p>NMI name. Example: <code>\"National Institute of Metrology\"</code></p> <code>nmi_service_code</code> <code>str</code> <p>NMI service code. Example: <code>\"NIM/11.1.4a\"</code></p> <code>nmi_service_link</code> <code>str</code> <p>NMI service link.</p> <code>publication_date</code> <code>str</code> <p>Publication date (YYYY-MM-DD).</p> <code>quantity_value</code> <code>str</code> <p>Quantity value. Example: <code>\"Absorbed dose/rate\"</code></p> <code>rmo</code> <code>str</code> <p>RMO acronym. Example: <code>\"EURAMET\"</code></p> <code>status</code> <code>str</code> <p>CMC status. Example: <code>\"Published\"</code></p> <code>status_date</code> <code>str</code> <p>Last status date (YYYY-MM-DD).</p> <code>sub_category_value</code> <code>str</code> <p>Sub category value. Example: <code>\"Metals\"</code></p> <code>traceability_source</code> <code>str</code> <p>Traceability source. Example: <code>\"VSL\"</code></p> <code>uncertainty_convention</code> <code>UncertaintyConvention | None</code> <p>Uncertainty convention.</p> <code>uncertainty_equation</code> <code>ResultEquation | None</code> <p>Uncertainty equation.</p> <code>uncertainty_mode</code> <code>AbsoluteRelative | None</code> <p>Uncertainty mode.</p> <code>uncertainty_table</code> <code>ResultTable | None</code> <p>Uncertainty table.</p>"},{"location":"api/classes/#msl.kcdb.classes.ResultCommon","title":"ResultCommon","text":"<pre><code>ResultCommon(kwargs)\n</code></pre> <p>Common attributes for advanced search results.</p> <p>Attributes:</p> Name Type Description <code>approval_date</code> <code>str</code> <p>Approval date (YYYY-MM-DD).</p> <code>cmc</code> <code>ResultUnit | None</code> <p>CMC result unit.</p> <code>cmc_base_unit</code> <code>ResultUnit | None</code> <p>CMC base unit.</p> <code>cmc_uncertainty</code> <code>ResultUnit | None</code> <p>CMC uncertainty.</p> <code>cmc_uncertainty_base_unit</code> <code>ResultUnit | None</code> <p>CMC uncertainty base unit.</p> <code>comments</code> <code>str</code> <p>Comments.</p> <code>confidence_level</code> <code>float | None</code> <p>Confidence level.</p> <code>country_value</code> <code>str</code> <p>Country full name. Example: <code>\"China\"</code></p> <code>coverage_factor</code> <code>float | None</code> <p>Coverage factor.</p> <code>domain_code</code> <code>str</code> <p>Domain code. Example: <code>\"CHEM-BIO\"</code></p> <code>group_identifier</code> <code>str</code> <p>Group identifier.</p> <code>id</code> <code>int</code> <p>Document database id.</p> <code>kcdb_code</code> <code>str</code> <p>Document KCDB code. Example: <code>\"APMP-QM-CN-00000JZR-1\"</code></p> <code>metrology_area_label</code> <code>str</code> <p>Metrology area label. Example: <code>\"QM\"</code></p> <code>nmi_code</code> <code>str</code> <p>NMI code. Example: <code>\"NIM\"</code></p> <code>nmi_name</code> <code>str</code> <p>NMI name. Example: <code>\"National Institute of Metrology\"</code></p> <code>nmi_service_code</code> <code>str</code> <p>NMI service code. Example: <code>\"NIM/11.1.4a\"</code></p> <code>nmi_service_link</code> <code>str</code> <p>NMI service link.</p> <code>publication_date</code> <code>str</code> <p>Publication date (YYYY-MM-DD).</p> <code>quantity_value</code> <code>str</code> <p>Quantity value. Example: <code>\"Absorbed dose/rate\"</code></p> <code>rmo</code> <code>str</code> <p>RMO acronym. Example: <code>\"EURAMET\"</code></p> <code>status</code> <code>str</code> <p>CMC status. Example: <code>\"Published\"</code></p> <code>status_date</code> <code>str</code> <p>Last status date (YYYY-MM-DD).</p> <code>traceability_source</code> <code>str</code> <p>Traceability source. Example: <code>\"VSL\"</code></p> <code>uncertainty_equation</code> <code>ResultEquation | None</code> <p>Uncertainty equation.</p> <code>uncertainty_mode</code> <code>AbsoluteRelative | None</code> <p>Uncertainty mode.</p> <code>uncertainty_table</code> <code>ResultTable | None</code> <p>Uncertainty table.</p>"},{"location":"api/classes/#msl.kcdb.classes.ResultEquation","title":"ResultEquation","text":"<pre><code>ResultEquation(kwargs)\n</code></pre> <p>Equation representation.</p> <p>Attributes:</p> Name Type Description <code>equation</code> <code>str</code> <p>Equation name.</p> <code>equation_comment</code> <code>str</code> <p>Equation comment.</p>"},{"location":"api/classes/#msl.kcdb.classes.ResultFilter","title":"ResultFilter","text":"<pre><code>ResultFilter(kwargs)\n</code></pre> <p>Filter representation.</p> <p>Attributes:</p> Name Type Description <code>children</code> <code>list[ResultFilter]</code> <p>Filter children.</p> <code>code</code> <code>str</code> <p>Filter code. Example: <code>\"cmcMaterial\"</code></p> <code>count</code> <code>int</code> <p>Filter count.</p> <code>name</code> <code>str</code> <p>Filter name. Example: <code>\"cmcMaterial\"</code></p> <code>order</code> <code>int</code> <p>Filter order.</p>"},{"location":"api/classes/#msl.kcdb.classes.ResultIonizingRadiation","title":"ResultIonizingRadiation","text":"<pre><code>ResultIonizingRadiation(kwargs)\n</code></pre> <p>               Bases: <code>ResultCommon</code></p> <p>Ionizing Radiation result.</p> <p>Attributes:</p> Name Type Description <code>approval_date</code> <code>str</code> <p>Approval date (YYYY-MM-DD).</p> <code>branch_value</code> <code>str</code> <p>Branch value. Example: <code>\"Radioactivity\"</code></p> <code>cmc</code> <code>ResultUnit | None</code> <p>CMC result unit.</p> <code>cmc_base_unit</code> <code>ResultUnit | None</code> <p>CMC base unit.</p> <code>cmc_uncertainty</code> <code>ResultUnit | None</code> <p>CMC uncertainty.</p> <code>cmc_uncertainty_base_unit</code> <code>ResultUnit | None</code> <p>CMC uncertainty base unit.</p> <code>comments</code> <code>str</code> <p>Comments.</p> <code>confidence_level</code> <code>float | None</code> <p>Confidence level.</p> <code>country_value</code> <code>str</code> <p>Country full name. Example: <code>\"China\"</code></p> <code>coverage_factor</code> <code>float | None</code> <p>Coverage factor.</p> <code>domain_code</code> <code>str</code> <p>Domain code. Example: <code>\"CHEM-BIO\"</code></p> <code>group_identifier</code> <code>str</code> <p>Group identifier.</p> <code>id</code> <code>int</code> <p>Document database id.</p> <code>instrument</code> <code>str</code> <p>Instrument. Example: <code>\"Multiple nuclide source, solution\"</code></p> <code>instrument_method</code> <code>str</code> <p>Instrument method. Example: <code>\"Ge detector, multichannel analyzer\"</code></p> <code>international_standard</code> <code>str</code> <p>International standard. Example: <code>\"EURAMET Cg19, ISO 8655-6\"</code></p> <code>kcdb_code</code> <code>str</code> <p>Document KCDB code. Example: <code>\"APMP-QM-CN-00000JZR-1\"</code></p> <code>medium_value</code> <code>str</code> <p>Medium value. Example: <code>\"Liquid\"</code></p> <code>metrology_area_label</code> <code>str</code> <p>Metrology area label. Example: <code>\"QM\"</code></p> <code>nmi_code</code> <code>str</code> <p>NMI code. Example: <code>\"NIM\"</code></p> <code>nmi_name</code> <code>str</code> <p>NMI name. Example: <code>\"National Institute of Metrology\"</code></p> <code>nmi_service_code</code> <code>str</code> <p>NMI service code. Example: <code>\"NIM/11.1.4a\"</code></p> <code>nmi_service_link</code> <code>str</code> <p>NMI service link.</p> <code>nuclide_value</code> <code>str</code> <p>Nuclide value. Example: <code>\"Cr-51\"</code></p> <code>publication_date</code> <code>str</code> <p>Publication date (YYYY-MM-DD).</p> <code>quantity_value</code> <code>str</code> <p>Quantity value. Example: <code>\"Absorbed dose/rate\"</code></p> <code>radiation_code</code> <code>str</code> <p>Radiation code separated by a dot for branch, quantity, source, medium. Example: <code>\"2.1.3.2\"</code></p> <code>radiation_specification</code> <code>str</code> <p>Radiation specification name. Example: <code>\"10 ml to 500 ml NMIJ/AIST standard cylindrical plastic bottle\"</code></p> <code>reference_standard</code> <code>str</code> <p>Reference standard. Example: <code>\"Comparison with the NMIJ/AIST standard source\"</code></p> <code>rmo</code> <code>str</code> <p>RMO acronym. Example: <code>\"EURAMET\"</code></p> <code>source_value</code> <code>str</code> <p>Source value. Example: <code>\"Multi-radionuclide source\"</code></p> <code>status</code> <code>str</code> <p>CMC status. Example: <code>\"Published\"</code></p> <code>status_date</code> <code>str</code> <p>Last status date (YYYY-MM-DD).</p> <code>traceability_source</code> <code>str</code> <p>Traceability source. Example: <code>\"VSL\"</code></p> <code>uncertainty_equation</code> <code>ResultEquation | None</code> <p>Uncertainty equation.</p> <code>uncertainty_mode</code> <code>AbsoluteRelative | None</code> <p>Uncertainty mode.</p> <code>uncertainty_table</code> <code>ResultTable | None</code> <p>Uncertainty table.</p>"},{"location":"api/classes/#msl.kcdb.classes.ResultParam","title":"ResultParam","text":"<pre><code>ResultParam(kwargs)\n</code></pre> <p>Parameter representation.</p> <p>Attributes:</p> Name Type Description <code>parameter_name</code> <code>str</code> <p>Parameter name. Example: <code>\"S21 and S12\"</code></p> <code>parameter_value</code> <code>str</code> <p>Parameter value. Example: <code>\"-80 dB to 0 dB\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.ResultPhysics","title":"ResultPhysics","text":"<pre><code>ResultPhysics(kwargs)\n</code></pre> <p>               Bases: <code>ResultCommon</code></p> <p>General Physics result.</p> <p>Attributes:</p> Name Type Description <code>approval_date</code> <code>str</code> <p>Approval date (YYYY-MM-DD).</p> <code>branch_label</code> <code>str</code> <p>Branch label. Example: <code>\"PR/Photo\"</code></p> <code>branch_value</code> <code>str</code> <p>Branch value. Example: <code>\"Photometry\"</code></p> <code>cmc</code> <code>ResultUnit | None</code> <p>CMC result unit.</p> <code>cmc_base_unit</code> <code>ResultUnit | None</code> <p>CMC base unit.</p> <code>cmc_uncertainty</code> <code>ResultUnit | None</code> <p>CMC uncertainty.</p> <code>cmc_uncertainty_base_unit</code> <code>ResultUnit | None</code> <p>CMC uncertainty base unit.</p> <code>comments</code> <code>str</code> <p>Comments.</p> <code>confidence_level</code> <code>float | None</code> <p>Confidence level.</p> <code>country_value</code> <code>str</code> <p>Country full name. Example: <code>\"China\"</code></p> <code>coverage_factor</code> <code>float | None</code> <p>Coverage factor.</p> <code>domain_code</code> <code>str</code> <p>Domain code. Example: <code>\"CHEM-BIO\"</code></p> <code>group_identifier</code> <code>str</code> <p>Group identifier.</p> <code>id</code> <code>int</code> <p>Document database id.</p> <code>individual_service_value</code> <code>str</code> <p>Individual service value. Example: <code>\"Tungsten source\"</code></p> <code>instrument</code> <code>str</code> <p>Instrument. Example: <code>\"Illuminance meter\"</code></p> <code>instrument_method</code> <code>str</code> <p>Instrument method. Example: <code>\"Standard lamp\"</code></p> <code>international_standard</code> <code>str</code> <p>International standard. Example: <code>\"EURAMET Cg19, ISO 8655-6\"</code></p> <code>kcdb_code</code> <code>str</code> <p>Document KCDB code. Example: <code>\"APMP-QM-CN-00000JZR-1\"</code></p> <code>kcdb_service_category</code> <code>str</code> <p>KCDB service category. Example: <code>\"PR/Photo/1.2.1\"</code></p> <code>metrology_area_label</code> <code>str</code> <p>Metrology area label. Example: <code>\"QM\"</code></p> <code>nmi_code</code> <code>str</code> <p>NMI code. Example: <code>\"NIM\"</code></p> <code>nmi_name</code> <code>str</code> <p>NMI name. Example: <code>\"National Institute of Metrology\"</code></p> <code>nmi_service_code</code> <code>str</code> <p>NMI service code. Example: <code>\"NIM/11.1.4a\"</code></p> <code>nmi_service_link</code> <code>str</code> <p>NMI service link.</p> <code>parameters</code> <code>list[ResultParam]</code> <p>Parameters list with name and value.</p> <code>physics_code</code> <code>str</code> <p>Physics code. Example: <code>\"1.2.1\"</code></p> <code>publication_date</code> <code>str</code> <p>Publication date (YYYY-MM-DD).</p> <code>quantity_value</code> <code>str</code> <p>Quantity value. Example: <code>\"Absorbed dose/rate\"</code></p> <code>rmo</code> <code>str</code> <p>RMO acronym. Example: <code>\"EURAMET\"</code></p> <code>service_value</code> <code>str</code> <p>Service value. Example: <code>\"Photometry\"</code></p> <code>status</code> <code>str</code> <p>CMC status. Example: <code>\"Published\"</code></p> <code>status_date</code> <code>str</code> <p>Last status date (YYYY-MM-DD).</p> <code>sub_service_value</code> <code>str</code> <p>Sub service value. Example: <code>\"Illuminance responsivity\"</code></p> <code>traceability_source</code> <code>str</code> <p>Traceability source. Example: <code>\"VSL\"</code></p> <code>uncertainty_equation</code> <code>ResultEquation | None</code> <p>Uncertainty equation.</p> <code>uncertainty_mode</code> <code>AbsoluteRelative | None</code> <p>Uncertainty mode.</p> <code>uncertainty_table</code> <code>ResultTable | None</code> <p>Uncertainty table.</p>"},{"location":"api/classes/#msl.kcdb.classes.ResultTable","title":"ResultTable","text":"<pre><code>ResultTable(kwargs)\n</code></pre> <p>Table representation.</p> <p>Attributes:</p> Name Type Description <code>table_cols</code> <code>int</code> <p>Number of columns in table.</p> <code>table_comment</code> <code>str</code> <p>Table comment.</p> <code>table_contents</code> <code>str</code> <p>Table contents. Example: <code>\"{\"row_1\":{\"col_1\":\"val1\",\"col_2\":\"val2\"}}\"</code></p> <code>table_name</code> <code>str</code> <p>Table name. Example: <code>\"CH_Scatt-Atten_Mag\"</code></p> <code>table_rows</code> <code>int</code> <p>Number of rows in table.</p>"},{"location":"api/classes/#msl.kcdb.classes.ResultUnit","title":"ResultUnit","text":"<pre><code>ResultUnit(kwargs)\n</code></pre> <p>Units object definition.</p> <p>Attributes:</p> Name Type Description <code>lower_limit</code> <code>float | None</code> <p>Lower limit value.</p> <code>unit</code> <code>str</code> <p>Unit symbol. Example: <code>\"%\"</code></p> <code>upper_limit</code> <code>float | None</code> <p>Upper limit value.</p>"},{"location":"api/classes/#msl.kcdb.classes.Results","title":"Results","text":"<pre><code>Results(kwargs)\n</code></pre> <p>Attributes for advanced search results.</p> <p>Attributes:</p> Name Type Description <code>number_of_elements</code> <code>int</code> <p>Number of elements on this page.</p> <code>page_number</code> <code>int</code> <p>The page number (first page is 0) of the request.</p> <code>page_size</code> <code>int</code> <p>The page size that was requested.</p> <code>total_elements</code> <code>int</code> <p>Total number of elements available (in all pages).</p> <code>total_pages</code> <code>int</code> <p>Total number of pages.</p> <code>version_api_kcdb</code> <code>str</code> <p>KCDB API version. Example: <code>\"1.0.7\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.ResultsChemistryBiology","title":"ResultsChemistryBiology","text":"<pre><code>ResultsChemistryBiology(kwargs)\n</code></pre> <p>               Bases: <code>Results</code></p> <p>Chemistry and Biology search results.</p> <p>Attributes:</p> Name Type Description <code>data</code> <code>list[ResultChemistryBiology]</code> <p>Chemistry and Biology result data.</p> <code>number_of_elements</code> <code>int</code> <p>Number of elements on this page.</p> <code>page_number</code> <code>int</code> <p>The page number (first page is 0) of the request.</p> <code>page_size</code> <code>int</code> <p>The page size that was requested.</p> <code>total_elements</code> <code>int</code> <p>Total number of elements available (in all pages).</p> <code>total_pages</code> <code>int</code> <p>Total number of pages.</p> <code>version_api_kcdb</code> <code>str</code> <p>KCDB API version. Example: <code>\"1.0.7\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.ResultsIonizingRadiation","title":"ResultsIonizingRadiation","text":"<pre><code>ResultsIonizingRadiation(kwargs)\n</code></pre> <p>               Bases: <code>Results</code></p> <p>Ionizing Radiation search results.</p> <p>Attributes:</p> Name Type Description <code>data</code> <code>list[ResultIonizingRadiation]</code> <p>Ionizing Radiation result data.</p> <code>number_of_elements</code> <code>int</code> <p>Number of elements on this page.</p> <code>page_number</code> <code>int</code> <p>The page number (first page is 0) of the request.</p> <code>page_size</code> <code>int</code> <p>The page size that was requested.</p> <code>total_elements</code> <code>int</code> <p>Total number of elements available (in all pages).</p> <code>total_pages</code> <code>int</code> <p>Total number of pages.</p> <code>version_api_kcdb</code> <code>str</code> <p>KCDB API version. Example: <code>\"1.0.7\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.ResultsPhysics","title":"ResultsPhysics","text":"<pre><code>ResultsPhysics(kwargs)\n</code></pre> <p>               Bases: <code>Results</code></p> <p>General Physics search results.</p> <p>Attributes:</p> Name Type Description <code>data</code> <code>list[ResultPhysics]</code> <p>General Physics result data.</p> <code>number_of_elements</code> <code>int</code> <p>Number of elements on this page.</p> <code>page_number</code> <code>int</code> <p>The page number (first page is 0) of the request.</p> <code>page_size</code> <code>int</code> <p>The page size that was requested.</p> <code>total_elements</code> <code>int</code> <p>Total number of elements available (in all pages).</p> <code>total_pages</code> <code>int</code> <p>Total number of pages.</p> <code>version_api_kcdb</code> <code>str</code> <p>KCDB API version. Example: <code>\"1.0.7\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.ResultsQuickSearch","title":"ResultsQuickSearch","text":"<pre><code>ResultsQuickSearch(kwargs)\n</code></pre> <p>               Bases: <code>Results</code></p> <p>Quick search results.</p> <p>Attributes:</p> Name Type Description <code>aggregations</code> <code>list[ResultAggregation]</code> <p>The aggregations list.</p> <code>data</code> <code>list[Any]</code> <p>The quick search result data.</p> <code>filters_list</code> <code>list[ResultFilter]</code> <p>The filters list.</p> <code>number_of_elements</code> <code>int</code> <p>Number of elements on this page.</p> <code>page_number</code> <code>int</code> <p>The page number (first page is 0) of the request.</p> <code>page_size</code> <code>int</code> <p>The page size that was requested.</p> <code>total_elements</code> <code>int</code> <p>Total number of elements available (in all pages).</p> <code>total_pages</code> <code>int</code> <p>Total number of pages.</p> <code>version_api_kcdb</code> <code>str</code> <p>KCDB API version. Example: <code>\"1.0.7\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Service","title":"Service  <code>dataclass</code>","text":"<pre><code>Service(id, label, value, branch, physics_code)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A service of General Physics.</p> <p>Attributes:</p> Name Type Description <code>branch</code> <code>Branch</code> <p>The branch that the service belongs to.</p> <code>id</code> <code>int</code> <p>Service identity. Example: 16</p> <code>label</code> <code>str</code> <p>Service label. Example: <code>\"6\"</code></p> <code>physics_code</code> <code>str</code> <p>The physics code for this service. Example: <code>\"6\"</code></p> <code>value</code> <code>str</code> <p>Service value. Example: <code>\"AC current\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.Source","title":"Source  <code>dataclass</code>","text":"<pre><code>Source(id, label, value, branch)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A source of Ionizing Radiation.</p> <p>Attributes:</p> Name Type Description <code>branch</code> <code>Branch</code> <p>The branch that the source belongs to.</p> <code>id</code> <code>int</code> <p>Source identity. Example: 3</p> <code>label</code> <code>str</code> <p>Source label. Example: <code>\"3\"</code></p> <code>value</code> <code>str</code> <p>Source value. Example: <code>\"Beta radiation\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.SubService","title":"SubService  <code>dataclass</code>","text":"<pre><code>SubService(id, label, value, physics_code, service)\n</code></pre> <p>               Bases: <code>ReferenceData</code></p> <p>A sub service of General Physics.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Sub service identity. Example: 33</p> <code>label</code> <code>str</code> <p>Sub service label. Example: <code>\"1\"</code></p> <code>physics_code</code> <code>str</code> <p>The physics code for this sub service. Example: <code>\"6.1\"</code></p> <code>service</code> <code>Service</code> <p>The service that the sub service belongs to.</p> <code>value</code> <code>str</code> <p>Sub service value. Example: <code>\"AC-DC current transfer\"</code></p>"},{"location":"api/classes/#msl.kcdb.classes.UncertaintyConvention","title":"UncertaintyConvention","text":"<p>               Bases: <code>Enum</code></p> <p>Chemistry and Biology uncertainty convention.</p> <p>Attributes:</p> Name Type Description <code>ONE</code> <code>str</code> <p><code>\"One\"</code></p> <code>TWO</code> <code>str</code> <p><code>\"Two\"</code></p>"},{"location":"api/general_physics/","title":"Physics","text":"<p>Search the General Physics database.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics","title":"Physics","text":"<pre><code>Physics(timeout=30)\n</code></pre> <p>               Bases: <code>KCDB</code></p> <p>General Physics class.</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float | None</code> <p>The maximum number of seconds to wait for a response from the KCDB server.</p> <code>30</code>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.BASE_URL","title":"BASE_URL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BASE_URL = 'https://www.bipm.org/api/kcdb'\n</code></pre> <p>The base url to the KCDB API.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.DOMAIN","title":"DOMAIN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DOMAIN = Domain(code='PHYSICS', name='General physics')\n</code></pre> <p>The General Physics domain.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.MAX_PAGE_SIZE","title":"MAX_PAGE_SIZE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MAX_PAGE_SIZE = 10000\n</code></pre> <p>The maximum number of elements that can be returned in a single KCDB request.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.timeout","title":"timeout  <code>property</code> <code>writable</code>","text":"<pre><code>timeout\n</code></pre> <p>The timeout value, in seconds, to use for a KCDB request.</p> <p>Returns:</p> Type Description <code>float | None</code> <p>The maximum number of seconds to wait for a response from the KCDB server. If <code>None</code>, there is no timeout.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.branches","title":"branches","text":"<pre><code>branches(metrology_area)\n</code></pre> <p>Return all General Physics branches for the specified metrology area.</p> <p>Parameters:</p> Name Type Description Default <code>metrology_area</code> <code>MetrologyArea</code> <p>The metrology area to return the branches for.</p> required <p>Returns:</p> Type Description <code>list[Branch]</code> <p>A list of Branches.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.countries","title":"countries","text":"<pre><code>countries()\n</code></pre> <p>Return all countries.</p> <p>Returns:</p> Type Description <code>list[Country]</code> <p>A list of Country's.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.domains","title":"domains","text":"<pre><code>domains()\n</code></pre> <p>Return all KCDB domains.</p> <p>Returns:</p> Type Description <code>list[Domain]</code> <p>A list of Domains.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.filter","title":"filter  <code>staticmethod</code>","text":"<pre><code>filter(data, pattern, *, flags=0)\n</code></pre> <p>Filter the reference data based on a pattern search.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Iterable[T]</code> <p>An iterable of a ReferenceData subclass.</p> required <code>pattern</code> <code>str</code> <p>A regular-expression pattern to use to filter results. Uses the <code>label</code> and <code>value</code> attributes of each item in <code>data</code> to perform the filtering.</p> required <code>flags</code> <code>int</code> <p>Pattern flags passed to re.compile.</p> <code>0</code> <p>Returns:</p> Type Description <code>list[T]</code> <p>The filtered reference data.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.get","title":"get","text":"<pre><code>get(url, *, json=None, params=None)\n</code></pre> <p>Send a GET request to the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL for the request.</p> required <code>json</code> <code>dict[str, bool | int | str | list[str]] | None</code> <p>A JSON-serializable object to include in the body of the request.</p> <code>None</code> <code>params</code> <code>dict[str, int | str] | None</code> <p>Query parameters to include in the URL.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>The response.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.individual_services","title":"individual_services","text":"<pre><code>individual_services(sub_service)\n</code></pre> <p>Return all General Physics individual services for the specified sub service.</p> <p>Parameters:</p> Name Type Description Default <code>sub_service</code> <code>SubService</code> <p>The sub service to return the individual services for.</p> required <p>Returns:</p> Type Description <code>list[IndividualService]</code> <p>A list of IndividualServices.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.metrology_areas","title":"metrology_areas","text":"<pre><code>metrology_areas()\n</code></pre> <p>Return all metrology areas.</p> <p>Returns:</p> Type Description <code>list[MetrologyArea]</code> <p>A list of MetrologyAreas.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.non_ionizing_quantities","title":"non_ionizing_quantities","text":"<pre><code>non_ionizing_quantities()\n</code></pre> <p>Return all non-Ionizing Radiation quantities.</p> <p>Returns:</p> Type Description <code>list[NonIonizingQuantity]</code> <p>A list of NonIonizingQuantity's.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.post","title":"post","text":"<pre><code>post(url, *, json=None, params=None)\n</code></pre> <p>Send a POST request to the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL for the request.</p> required <code>json</code> <code>dict[str, bool | int | str | list[str]] | None</code> <p>A JSON-serializable object to include in the body of the request.</p> <code>None</code> <code>params</code> <code>dict[str, int | str] | None</code> <p>Query parameters to include in the URL.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>The response.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.quick_search","title":"quick_search","text":"<pre><code>quick_search(\n    *,\n    excluded_filters=None,\n    included_filters=None,\n    keywords=None,\n    page=0,\n    page_size=100,\n    show_table=False\n)\n</code></pre> <p>Perform a quick search.</p> <p>Parameters:</p> Name Type Description Default <code>excluded_filters</code> <code>Iterable[str] | None</code> <p>Excluded filters. Example: <code>[\"cmcServices.AC current\", \"cmcServices.AC power\"]</code></p> <code>None</code> <code>included_filters</code> <code>Iterable[str] | None</code> <p>Included filters. Example: <code>[\"cmcDomain.CHEM-BIO\", \"cmcBranches.Dimensional metrology\"]</code></p> <code>None</code> <code>keywords</code> <code>str | None</code> <p>Search keywords in elasticsearch format. Example: <code>\"phase OR test\"</code></p> <code>None</code> <code>page</code> <code>int</code> <p>Page number requested (0 means first page).</p> <code>0</code> <code>page_size</code> <code>int</code> <p>Maximum number of elements in a page (maximum value is 10000).</p> <code>100</code> <code>show_table</code> <code>bool</code> <p>Set to <code>True</code> to return table data.</p> <code>False</code> <p>Returns:</p> Type Description <code>ResultsQuickSearch</code> <p>The CMC quick-search results.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.search","title":"search","text":"<pre><code>search(\n    metrology_area,\n    *,\n    branch=None,\n    countries=None,\n    keywords=None,\n    page=0,\n    page_size=100,\n    physics_code=None,\n    public_date_from=None,\n    public_date_to=None,\n    show_table=False\n)\n</code></pre> <p>Perform a General Physics search.</p> <p>Parameters:</p> Name Type Description Default <code>metrology_area</code> <code>str | MetrologyArea</code> <p>Metrology area label. Example: <code>\"EM\"</code></p> required <code>branch</code> <code>str | Branch | None</code> <p>Branch label. Example: <code>\"EM/RF\"</code></p> <code>None</code> <code>countries</code> <code>str | Country | Iterable[str | Country] | None</code> <p>Country label(s). Example: <code>[\"CH\", \"FR\", \"JP\"]</code></p> <code>None</code> <code>keywords</code> <code>str | None</code> <p>Search keywords in elasticsearch format. Example: <code>\"phase OR multichannel OR water\"</code></p> <code>None</code> <code>page</code> <code>int</code> <p>Page number requested (0 means first page).</p> <code>0</code> <code>page_size</code> <code>int</code> <p>Maximum number of elements in a page (maximum value is 10000).</p> <code>100</code> <code>physics_code</code> <code>str | Service | SubService | IndividualService | None</code> <p>Physics code is composed of <code>Service.label</code>, <code>SubService.label</code> (if requested) and <code>IndividualService.label</code> (if requested) separated by dots. Example: <code>\"11.3.3\"</code></p> <code>None</code> <code>public_date_from</code> <code>str | date | None</code> <p>Minimal publication date. Example: <code>\"2005-01-31\"</code></p> <code>None</code> <code>public_date_to</code> <code>str | date | None</code> <p>Maximal publication date. Example: <code>\"2020-06-30\"</code></p> <code>None</code> <code>show_table</code> <code>bool</code> <p>Set to <code>True</code> to return table data.</p> <code>False</code> <p>Returns:</p> Type Description <code>ResultsPhysics</code> <p>The CMC results for General Physics.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.services","title":"services","text":"<pre><code>services(branch)\n</code></pre> <p>Return all General Physics services for the specified branch.</p> <p>Parameters:</p> Name Type Description Default <code>branch</code> <code>Branch</code> <p>The branch to return the services for.</p> required <p>Returns:</p> Type Description <code>list[Service]</code> <p>A list of Services.</p>"},{"location":"api/general_physics/#msl.kcdb.general_physics.Physics.sub_services","title":"sub_services","text":"<pre><code>sub_services(service)\n</code></pre> <p>Return all General Physics sub services for the specified service.</p> <p>Parameters:</p> Name Type Description Default <code>service</code> <code>Service</code> <p>The service to return the sub services for.</p> required <p>Returns:</p> Type Description <code>list[SubService]</code> <p>A list of SubServices.</p>"},{"location":"api/ionizing_radiation/","title":"Ionizing Radiation","text":"<p>Search the Ionizing Radiation database.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation","title":"IonizingRadiation","text":"<pre><code>IonizingRadiation(timeout=30)\n</code></pre> <p>               Bases: <code>KCDB</code></p> <p>Ionizing Radiation class.</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float | None</code> <p>The maximum number of seconds to wait for a response from the KCDB server.</p> <code>30</code>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.BASE_URL","title":"BASE_URL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BASE_URL = 'https://www.bipm.org/api/kcdb'\n</code></pre> <p>The base url to the KCDB API.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.DOMAIN","title":"DOMAIN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DOMAIN = Domain(code=\"RADIATION\", name=\"Ionizing radiation\")\n</code></pre> <p>The Ionizing Radiation domain.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.MAX_PAGE_SIZE","title":"MAX_PAGE_SIZE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MAX_PAGE_SIZE = 10000\n</code></pre> <p>The maximum number of elements that can be returned in a single KCDB request.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.timeout","title":"timeout  <code>property</code> <code>writable</code>","text":"<pre><code>timeout\n</code></pre> <p>The timeout value, in seconds, to use for a KCDB request.</p> <p>Returns:</p> Type Description <code>float | None</code> <p>The maximum number of seconds to wait for a response from the KCDB server. If <code>None</code>, there is no timeout.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.branches","title":"branches","text":"<pre><code>branches(metrology_area)\n</code></pre> <p>Return all Ionizing Radiation branches for the specified metrology area.</p> <p>Parameters:</p> Name Type Description Default <code>metrology_area</code> <code>MetrologyArea</code> <p>The metrology area to return the branches for.</p> required <p>Returns:</p> Type Description <code>list[Branch]</code> <p>A list of Branches.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.countries","title":"countries","text":"<pre><code>countries()\n</code></pre> <p>Return all countries.</p> <p>Returns:</p> Type Description <code>list[Country]</code> <p>A list of Country's.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.domains","title":"domains","text":"<pre><code>domains()\n</code></pre> <p>Return all KCDB domains.</p> <p>Returns:</p> Type Description <code>list[Domain]</code> <p>A list of Domains.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.filter","title":"filter  <code>staticmethod</code>","text":"<pre><code>filter(data, pattern, *, flags=0)\n</code></pre> <p>Filter the reference data based on a pattern search.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Iterable[T]</code> <p>An iterable of a ReferenceData subclass.</p> required <code>pattern</code> <code>str</code> <p>A regular-expression pattern to use to filter results. Uses the <code>label</code> and <code>value</code> attributes of each item in <code>data</code> to perform the filtering.</p> required <code>flags</code> <code>int</code> <p>Pattern flags passed to re.compile.</p> <code>0</code> <p>Returns:</p> Type Description <code>list[T]</code> <p>The filtered reference data.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.get","title":"get","text":"<pre><code>get(url, *, json=None, params=None)\n</code></pre> <p>Send a GET request to the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL for the request.</p> required <code>json</code> <code>dict[str, bool | int | str | list[str]] | None</code> <p>A JSON-serializable object to include in the body of the request.</p> <code>None</code> <code>params</code> <code>dict[str, int | str] | None</code> <p>Query parameters to include in the URL.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>The response.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.mediums","title":"mediums","text":"<pre><code>mediums(branch)\n</code></pre> <p>Return all Ionizing Radiation mediums for the specified branch.</p> <p>Parameters:</p> Name Type Description Default <code>branch</code> <code>Branch</code> <p>The branch to return the mediums for.</p> required <p>Returns:</p> Type Description <code>list[Medium]</code> <p>A list of Mediums.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.metrology_areas","title":"metrology_areas","text":"<pre><code>metrology_areas()\n</code></pre> <p>Return all metrology areas.</p> <p>Returns:</p> Type Description <code>list[MetrologyArea]</code> <p>A list of MetrologyAreas.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.non_ionizing_quantities","title":"non_ionizing_quantities","text":"<pre><code>non_ionizing_quantities()\n</code></pre> <p>Return all non-Ionizing Radiation quantities.</p> <p>Returns:</p> Type Description <code>list[NonIonizingQuantity]</code> <p>A list of NonIonizingQuantity's.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.nuclides","title":"nuclides","text":"<pre><code>nuclides()\n</code></pre> <p>Return all Ionizing Radiation nuclides.</p> <p>Returns:</p> Type Description <code>list[Nuclide]</code> <p>A list of Nuclides.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.post","title":"post","text":"<pre><code>post(url, *, json=None, params=None)\n</code></pre> <p>Send a POST request to the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL for the request.</p> required <code>json</code> <code>dict[str, bool | int | str | list[str]] | None</code> <p>A JSON-serializable object to include in the body of the request.</p> <code>None</code> <code>params</code> <code>dict[str, int | str] | None</code> <p>Query parameters to include in the URL.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>The response.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.quantities","title":"quantities","text":"<pre><code>quantities(branch)\n</code></pre> <p>Return all Ionizing Radiation quantities for the specified branch.</p> <p>Parameters:</p> Name Type Description Default <code>branch</code> <code>Branch</code> <p>The branch to return the quantities for.</p> required <p>Returns:</p> Type Description <code>list[Quantity]</code> <p>A list of Quantity's.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.quick_search","title":"quick_search","text":"<pre><code>quick_search(\n    *,\n    excluded_filters=None,\n    included_filters=None,\n    keywords=None,\n    page=0,\n    page_size=100,\n    show_table=False\n)\n</code></pre> <p>Perform a quick search.</p> <p>Parameters:</p> Name Type Description Default <code>excluded_filters</code> <code>Iterable[str] | None</code> <p>Excluded filters. Example: <code>[\"cmcServices.AC current\", \"cmcServices.AC power\"]</code></p> <code>None</code> <code>included_filters</code> <code>Iterable[str] | None</code> <p>Included filters. Example: <code>[\"cmcDomain.CHEM-BIO\", \"cmcBranches.Dimensional metrology\"]</code></p> <code>None</code> <code>keywords</code> <code>str | None</code> <p>Search keywords in elasticsearch format. Example: <code>\"phase OR test\"</code></p> <code>None</code> <code>page</code> <code>int</code> <p>Page number requested (0 means first page).</p> <code>0</code> <code>page_size</code> <code>int</code> <p>Maximum number of elements in a page (maximum value is 10000).</p> <code>100</code> <code>show_table</code> <code>bool</code> <p>Set to <code>True</code> to return table data.</p> <code>False</code> <p>Returns:</p> Type Description <code>ResultsQuickSearch</code> <p>The CMC quick-search results.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.search","title":"search","text":"<pre><code>search(\n    *,\n    branch=None,\n    countries=None,\n    keywords=None,\n    medium=None,\n    metrology_area=\"RI\",\n    nuclide=None,\n    page=0,\n    page_size=100,\n    public_date_from=None,\n    public_date_to=None,\n    quantity=None,\n    show_table=False,\n    source=None\n)\n</code></pre> <p>Perform an Ionizing Radiation search.</p> <p>Parameters:</p> Name Type Description Default <code>branch</code> <code>str | Branch | None</code> <p>Branch label. Example: <code>\"RAD\"</code></p> <code>None</code> <code>countries</code> <code>str | Country | Iterable[str | Country] | None</code> <p>Country label(s). Example: <code>[\"CH\", \"FR\", \"JP\"]</code></p> <code>None</code> <code>keywords</code> <code>str | None</code> <p>Search keywords in elasticsearch format. Example: <code>\"phase OR multichannel OR water\"</code></p> <code>None</code> <code>medium</code> <code>str | Medium | None</code> <p>Medium label. Example: <code>\"3\"</code></p> <code>None</code> <code>metrology_area</code> <code>str | MetrologyArea</code> <p>Metrology area label. Example: <code>\"RI\"</code></p> <code>'RI'</code> <code>nuclide</code> <code>str | Nuclide | None</code> <p>Nuclide label. Example: <code>\"Co-60\"</code></p> <code>None</code> <code>page</code> <code>int</code> <p>Page number requested (0 means first page).</p> <code>0</code> <code>page_size</code> <code>int</code> <p>Maximum number of elements in a page (maximum value is 10000).</p> <code>100</code> <code>public_date_from</code> <code>str | date | None</code> <p>Minimal publication date. Example: <code>\"2005-01-31\"</code></p> <code>None</code> <code>public_date_to</code> <code>str | date | None</code> <p>Maximal publication date. Example: <code>\"2020-06-30\"</code></p> <code>None</code> <code>quantity</code> <code>str | Quantity | None</code> <p>Quantity label. Example: <code>\"1\"</code></p> <code>None</code> <code>show_table</code> <code>bool</code> <p>Set to <code>True</code> to return table data.</p> <code>False</code> <code>source</code> <code>str | Source | None</code> <p>Source label. Example: <code>\"2\"</code></p> <code>None</code> <p>Returns:</p> Type Description <code>ResultsIonizingRadiation</code> <p>The CMC results for Ionizing Radiation.</p>"},{"location":"api/ionizing_radiation/#msl.kcdb.ionizing_radiation.IonizingRadiation.sources","title":"sources","text":"<pre><code>sources(branch)\n</code></pre> <p>Return all Ionizing Radiation sources for the specified branch.</p> <p>Parameters:</p> Name Type Description Default <code>branch</code> <code>Branch</code> <p>The branch to return the mediums for.</p> required <p>Returns:</p> Type Description <code>list[Source]</code> <p>A list of Sources.</p>"},{"location":"api/kcdb/","title":"KCDB","text":"<p>Send a request to the KCDB server.</p> <p>The ChemistryBiology, Physics and IonizingRadiation classes all inherit from the KCDB class so, typically, there should be no reason to instantiate the KCDB class directly.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB","title":"KCDB","text":"<pre><code>KCDB(timeout=30)\n</code></pre> <p>KCDB base class.</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float | None</code> <p>The maximum number of seconds to wait for a response from the KCDB server.</p> <code>30</code>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.BASE_URL","title":"BASE_URL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BASE_URL = 'https://www.bipm.org/api/kcdb'\n</code></pre> <p>The base url to the KCDB API.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.MAX_PAGE_SIZE","title":"MAX_PAGE_SIZE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MAX_PAGE_SIZE = 10000\n</code></pre> <p>The maximum number of elements that can be returned in a single KCDB request.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.timeout","title":"timeout  <code>property</code> <code>writable</code>","text":"<pre><code>timeout\n</code></pre> <p>The timeout value, in seconds, to use for a KCDB request.</p> <p>Returns:</p> Type Description <code>float | None</code> <p>The maximum number of seconds to wait for a response from the KCDB server. If <code>None</code>, there is no timeout.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.countries","title":"countries","text":"<pre><code>countries()\n</code></pre> <p>Return all countries.</p> <p>Returns:</p> Type Description <code>list[Country]</code> <p>A list of Country's.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.domains","title":"domains","text":"<pre><code>domains()\n</code></pre> <p>Return all KCDB domains.</p> <p>Returns:</p> Type Description <code>list[Domain]</code> <p>A list of Domains.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.filter","title":"filter  <code>staticmethod</code>","text":"<pre><code>filter(data, pattern, *, flags=0)\n</code></pre> <p>Filter the reference data based on a pattern search.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Iterable[T]</code> <p>An iterable of a ReferenceData subclass.</p> required <code>pattern</code> <code>str</code> <p>A regular-expression pattern to use to filter results. Uses the <code>label</code> and <code>value</code> attributes of each item in <code>data</code> to perform the filtering.</p> required <code>flags</code> <code>int</code> <p>Pattern flags passed to re.compile.</p> <code>0</code> <p>Returns:</p> Type Description <code>list[T]</code> <p>The filtered reference data.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.get","title":"get","text":"<pre><code>get(url, *, json=None, params=None)\n</code></pre> <p>Send a GET request to the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL for the request.</p> required <code>json</code> <code>dict[str, bool | int | str | list[str]] | None</code> <p>A JSON-serializable object to include in the body of the request.</p> <code>None</code> <code>params</code> <code>dict[str, int | str] | None</code> <p>Query parameters to include in the URL.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>The response.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.metrology_areas","title":"metrology_areas","text":"<pre><code>metrology_areas()\n</code></pre> <p>Return all metrology areas.</p> <p>Returns:</p> Type Description <code>list[MetrologyArea]</code> <p>A list of MetrologyAreas.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.non_ionizing_quantities","title":"non_ionizing_quantities","text":"<pre><code>non_ionizing_quantities()\n</code></pre> <p>Return all non-Ionizing Radiation quantities.</p> <p>Returns:</p> Type Description <code>list[NonIonizingQuantity]</code> <p>A list of NonIonizingQuantity's.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.post","title":"post","text":"<pre><code>post(url, *, json=None, params=None)\n</code></pre> <p>Send a POST request to the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL for the request.</p> required <code>json</code> <code>dict[str, bool | int | str | list[str]] | None</code> <p>A JSON-serializable object to include in the body of the request.</p> <code>None</code> <code>params</code> <code>dict[str, int | str] | None</code> <p>Query parameters to include in the URL.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>The response.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.KCDB.quick_search","title":"quick_search","text":"<pre><code>quick_search(\n    *,\n    excluded_filters=None,\n    included_filters=None,\n    keywords=None,\n    page=0,\n    page_size=100,\n    show_table=False\n)\n</code></pre> <p>Perform a quick search.</p> <p>Parameters:</p> Name Type Description Default <code>excluded_filters</code> <code>Iterable[str] | None</code> <p>Excluded filters. Example: <code>[\"cmcServices.AC current\", \"cmcServices.AC power\"]</code></p> <code>None</code> <code>included_filters</code> <code>Iterable[str] | None</code> <p>Included filters. Example: <code>[\"cmcDomain.CHEM-BIO\", \"cmcBranches.Dimensional metrology\"]</code></p> <code>None</code> <code>keywords</code> <code>str | None</code> <p>Search keywords in elasticsearch format. Example: <code>\"phase OR test\"</code></p> <code>None</code> <code>page</code> <code>int</code> <p>Page number requested (0 means first page).</p> <code>0</code> <code>page_size</code> <code>int</code> <p>Maximum number of elements in a page (maximum value is 10000).</p> <code>100</code> <code>show_table</code> <code>bool</code> <p>Set to <code>True</code> to return table data.</p> <code>False</code> <p>Returns:</p> Type Description <code>ResultsQuickSearch</code> <p>The CMC quick-search results.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.Response","title":"Response","text":"<pre><code>Response(response)\n</code></pre> <p>A response from the KCDB server.</p> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>HTTPResponse | HTTPError</code> <p>The server's response to an HTTP request.</p> required"},{"location":"api/kcdb/#msl.kcdb.kcdb.Response.data","title":"data  <code>property</code>","text":"<pre><code>data\n</code></pre> <p>The response body from the server.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.Response.ok","title":"ok  <code>property</code>","text":"<pre><code>ok\n</code></pre> <p>Whether the status code of the response is <code>HTTP 200 OK</code>.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.Response.status_code","title":"status_code  <code>property</code>","text":"<pre><code>status_code\n</code></pre> <p>The status code of the response.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.Response.json","title":"json","text":"<pre><code>json()\n</code></pre> <p>The JSON response body from the server.</p>"},{"location":"api/kcdb/#msl.kcdb.kcdb.Response.raise_for_status","title":"raise_for_status","text":"<pre><code>raise_for_status()\n</code></pre> <p>Raise an HTTPException only if the server returned an error.</p>"},{"location":"examples/","title":"Examples","text":"<p>Example scripts showing how to use the <code>ChemistryBiology</code>, <code>IonizingRadiation</code> and <code>Physics</code> classes. The example scripts are also available in the <code>msl-kcdb</code> repository.</p>"},{"location":"examples/chemistry_biology/","title":"Chemistry and Biology","text":"<p>Example script showing how to use the ChemistryBiology class to extract information from the KCDB.</p>"},{"location":"examples/chemistry_biology/#script","title":"Script","text":"<pre><code>\"\"\"Search the \"Chemistry and Biology\" metrology area of the KCDB.\"\"\"\n\nfrom msl.kcdb import ChemistryBiology\n\nchem_bio = ChemistryBiology()\n\n#\n# Get all reference data for the \"Chemistry and Biology\" metrology area\n#\nprint(f\"Getting all reference data for {chem_bio.DOMAIN.name}...\")\ncountries = chem_bio.countries()\nprint(f\"  There are {len(countries)} countries\")\nanalytes = chem_bio.analytes()\nprint(f\"  There are {len(analytes)} analytes\")\ncategories = chem_bio.categories()\nprint(f\"  There are {len(categories)} categories\")\n\n#\n# Find all analytes that are related to \"boron\"\n#\nprint(\"All analytes related to 'boron'...\")\nboron_analytes = chem_bio.filter(analytes, \"boron\")\nfor analyte in boron_analytes:\n    print(f\"  {analyte}\")\n\n#\n# Search the \"Chemistry and Biology\" database for NMIs that are capable of\n# performing measurements with \"boron\" analytes and print some information\n# about each NMI\n#\nprint(\"All NMIs that have capabilities with 'boron' analytes...\")\nfor analyte in boron_analytes:\n    result = chem_bio.search(analyte=analyte)\n    for data in result.data:\n        print(f\"  {data.nmi_code} ({data.category_value}): {data.nmi_service_code}\")\n</code></pre>"},{"location":"examples/chemistry_biology/#output","title":"Output","text":"<p>Running this script outputs the following, although, some values may change from what you observe when you run this script since information in the KCDB is continually changing.</p> <pre><code>Getting all reference data for Chemistry and Biology...\n  There are 105 countries\n  There are 1725 analytes\n  There are 15 categories\nAll analytes related to 'boron'...\n  Analyte(id=2, label='boron', value='boron')\nAll NMIs that have capabilities with 'boron' analytes...\n  NIST (Advanced materials): 8395201\n  NIST (Advanced materials): 8395202\n  NIST (Advanced materials): 8395206\n  NIST (Inorganic solutions): 8391106\n  KRISS (Inorganic solutions): 105-02-BX2\n  BAM (Inorganic solutions): InorgSol-7\n  BAM (Inorganic solutions): InorgSol-15\n  BAM (Inorganic solutions): InorgSol-16\n  SMU (Inorganic solutions): I-10-20\n  UME (Water): G3IK-3110\n  NIM (Water): Water-2\n  VNIIM (Water): 5.1-06\n  NMIJ AIST (Water): 5-01-05\n  NMIJ AIST (Food): 7505-02\n  NRC (Food): MEF-37\n  NRC (Water): TEW42\n  NMIJ AIST (Inorganic solutions): NMIJ CRM 3627\n</code></pre>"},{"location":"examples/ionizing_radiation/","title":"Ionizing Radiation","text":"<p>Example script showing how to use the IonizingRadiation class to extract information from the KCDB.</p>"},{"location":"examples/ionizing_radiation/#script","title":"Script","text":"<pre><code>\"\"\"Search the \"Ionizing Radiation\" metrology area of the KCDB.\"\"\"\n\nfrom msl.kcdb import IonizingRadiation\n\nir = IonizingRadiation()\n\n#\n# Get all reference data for the \"Ionizing Radiation\" metrology area\n#\nprint(f\"Getting all reference data for {ir.DOMAIN.name}...\")\nmetrology_areas = ir.metrology_areas()\nprint(f\"  There are {len(metrology_areas)} metrology areas\")\nbranches = [b for ma in metrology_areas for b in ir.branches(ma)]\nprint(f\"  There are {len(branches)} branches\")\nnuclides = ir.nuclides()\nprint(f\"  There are {len(nuclides)} nuclides\")\nquantities = [q for b in branches for q in ir.quantities(b)]\nprint(f\"  There are {len(quantities)} quantities\")\nmediums = [m for b in branches for m in ir.mediums(b)]\nprint(f\"  There are {len(mediums)} mediums\")\nsources = [s for b in branches for s in ir.sources(b)]\nprint(f\"  There are {len(sources)} sources\")\n\n#\n# Search the \"Ionizing Radiation\" database for NMIs that are capable of\n# performing measurements with a source of \"Beta radiation\" and print\n# some information about each NMI\n#\nprint(\"The following NMIs have capabilities to perform measurements with Beta radiation...\")\nfor source in ir.filter(sources, \"Beta\"):\n    # Here, we request the maximum number of elements that can be returned\n    # by the KCDB server within a single request\n    results = ir.search(branch=source.branch, source=source, page_size=ir.MAX_PAGE_SIZE)\n    for data in results.data:\n        print(f\"  {data.nmi_code} ({data.instrument}): {data.radiation_specification}\")\n</code></pre>"},{"location":"examples/ionizing_radiation/#output","title":"Output","text":"<p>Running this script outputs the following, although, some values may change from what you observe when you run this script since information in the KCDB is continually changing.</p> <pre><code>Getting all reference data for Ionizing radiation...\n  There are 1 metrology areas\n  There are 3 branches\n  There are 171 nuclides\n  There are 45 quantities\n  There are 25 mediums\n  There are 33 sources\nThe following NMIs have capabilities to perform measurements with Beta radiation...\n  NRSL/INER (Beta source): Sr-90/Y-90, 49 MBq (2001), ISO-6980\n  Nuclear Malaysia (Personal dosimeter): ISO-6980, 1.08 GBq (2007), 11 cm to 50 cm distance\n  Nuclear Malaysia (Personal dosimeter): ISO-6980, 418 MBq (2007), 11 cm to 50 cm distance\n  BFKH (Dosimeter or customers artifact): ISO 6980, Pm-147, Kr-85, Sr-90/Y-90\n  NMIJ AIST (Ionization chamber): Sr-90/Y-90, 460 MBq (2006.2), ISO 6980\n  NMIJ AIST (Ionization chamber): Kr-85, 3.7 GBq (2006.2), ISO 6980\n  NMIJ AIST (Ionization chamber): Pm-147, 3.7 GBq (2006.2), ISO 6980\n  VNIIFTRI (Chemical dosimeters): 0.01 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; to 10 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; (source, 2.96 10&lt;SUP&gt;12&lt;/SUP&gt; Bq, distance, 30 mm to 300 mm)\n  VNIIFTRI (Chemical dosimeters): 0.01 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; to 10 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; (source, 2.96 10&lt;SUP&gt;12&lt;/SUP&gt; Bq, distance, 30 mm to 300 mm)\n  VNIIFTRI (Chemical dosimeters): 0.01 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; to 10 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; (source, 2.96 10&lt;SUP&gt;12&lt;/SUP&gt; Bq, distance, 30 mm to 300 mm)\n  VNIIFTRI (Chemical dosimeters): 0.01 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; to 10 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; (source, 2.96 10&lt;SUP&gt;12&lt;/SUP&gt; Bq, distance, 30 mm to 300 mm)\n  VNIIFTRI (Chemical dosimeters): 0.01 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; to 10 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; (source, 2.96 10&lt;SUP&gt;12&lt;/SUP&gt; Bq, distance, 30 mm to 300 mm)\n  VNIIFTRI (Calibrated field from Sr-90/Y-90 radionuclide sources): 0.01 Gy s&lt;SUP&gt;-1&lt;/SUP&gt; to 10 Gy s&lt;SUP&gt;-1&lt;/SUP&gt;\n  VNIIM (Dosimeter): ISO 6980\n  VNIIM (Dosimeter): ISO 6980\n  VNIIM (Dosimeter): ISO 6980\n  VNIIM (Dosimeter): ISO 6980\n  VNIIM (Dosimeter): ISO 6980\n  VNIIM (Dosimeter): ISO 6980\n  VNIIM (Beta ray reference source): ISO 6980\n  NPL (Ophthalmic applicators): Sr-90 or Ru-106 beta rays\n  CIEMAT (Radiation protection dosemeter): Sr-90/Y-90 with ISO 6980 filter. Calibration at 30 cm. Levels on July 17, 2006.\n  CIEMAT (Radiation protection dosemeter): Sr-90/Y-90 without ISO 6980 filter. Calibration at 11, 20, 30, 50 cm. Levels on July 17, 2006.\n  CIEMAT (Radiation protection dosemeter): Kr-85   with ISO 6980 filter. Calibration at 30 cm. Levels on July 16, 2006.\n  CIEMAT (Dosimeter): Sr-90/Y-90 with ISO 6980 filter. Calibration at 30 cm. Levels on July 17, 2006. Integration time 120 s - 23 h.\n  CIEMAT (Dosimeter): Kr-85 with ISO 6980 filter. Calibration  at 30 cm. Levels on July 16, 2006. Integration time 120 s - 23 h.\n  NIST (Extrapolation chambers): Sr-90/Y-90. Conform to ISO 6980 (1996) and ISO 6980-2 (2004)\n  NIST (Beta sources): Sr-90/Y-90. Conform to ISO 6980 (1996) and ISO 6980-2 (2004)\n  NIST (Personal dosimeter (TLD)): Sr-90/Y-90. Conform to ISO 6980 (1996) and ISO 6980-2 (2004)\n  NIST (Extrapolation chambers): Kr-85. Conform to ISO 6980 (1996) and ISO 6980-2 (2004)\n  NIST (Beta sources): Kr-85. Conform to ISO 6980 (1996) and ISO 6980-2 (2004)\n  NIST (Personal dosimeter (TLD)): Kr-85. Conform to ISO 6980 (1996) and ISO 6980-2 (2004)\n  ININ (Dosemeter): ISO 6980, Sr-90/Y-90\n  ININ (Personal dosimeter): ISO 6980, Sr-90/Y-90\n  LNE-LNHB (Personal dosimeter): ISO 6980, Pm-147, Kr-85, Sr-90/Y-90\n  LNE-LNHB (Personal dosimeter): ISO 6980, Pm-147, Kr-85, Sr-90/Y-90\n  LNE-LNHB (Dosemeter): ISO 6980, Pm-147, Kr-85, Sr-90/Y-90\n  LNE-LNHB (Dosemeter): ISO 6980, Pm-147, Kr-85, Sr-90/Y-90\n  LNE-LNHB (Dosemeter): ISO 6980, Pm-147, Kr-85, Sr-90/Y-90\n  LNE-LNHB (Dosemeter): ISO 6980, Pm-147, Kr-85, Sr-90/Y-90\n  PTB (Radiation source, ionization chamber or directional dosemeter or personal dosimeter): Beta radiation reference source: Pm-147 (0.22 MeV) to Ru-106 (3.5 MeV); conversion coefficients from absorbed dose to operational quantities based on measurements and Monte Carlo transport simulations\n  KRISS (Personal dosimeter): Sr-90/Y-90, ISO 6980, 1.85 GBq (1994), 74 MBq (1994)\n  KRISS (Ionization chamber): Sr-90/Y-90, ISO 6980, 1.85 GBq (1994), 74 MBq (1994)\n  KRISS (Beta source): Sr-90/Y-90, ISO 6980\n  KRISS (Protection level dosemeter): Sr-90/Y-90, ISO 6980, 1.85 GBq (1994), 74 MBq (1994)\n  STUK (Beta dosimeters and other targets): Sr-90/Y-90 and Kr-85\n</code></pre>"},{"location":"examples/physics/","title":"Physics","text":"<p>Example script showing how to use the Physics class to extract information from the KCDB.</p>"},{"location":"examples/physics/#script","title":"Script","text":"<pre><code>\"\"\"Search the \"General Physics\" metrology area of the KCDB.\"\"\"\n\nfrom __future__ import annotations\n\nfrom typing import TYPE_CHECKING\n\nfrom msl.kcdb import Physics\n\nif TYPE_CHECKING:\n    from msl.kcdb.classes import ResultPhysics\n\n\nphysics = Physics()\n\n#\n# Generate a list of all possible branches for the \"General Physics\" metrology area\n#\nprint(f\"Get some reference data for {physics.DOMAIN.name}...\")\nmetrology_areas = physics.metrology_areas()\nprint(f\"  There are {len(metrology_areas)} metrology areas\")\nbranches = [b for ma in metrology_areas for b in physics.branches(ma)]\nprint(f\"  There are {len(branches)} branches\")\n\n#\n# Search the \"General Physics\" database for NMIs that are capable of performing\n# fibre-optic measurements and print some information about each NMI\n#\nresults: list[ResultPhysics] = []\nfor branch in physics.filter(branches, \"Fibre optics\"):\n    page = 0\n    while True:\n        # Here, the `page_size` value is made relatively small to show how you can write\n        # code that loops until all CMCs are returned. However, you could increase the\n        # `page_size` value to avoid querying the KCDB database multiple times.\n        result = physics.search(branch.metrology_area, branch=branch, page=page, page_size=50)\n        if result.number_of_elements == 0:\n            break\n        results.extend(result.data)\n        page += 1\n\nprint(f\"There are {len(results)} NMIs with fibre-optic capabilities...\")\nfor r in sorted(results, key=lambda r: r.nmi_code):\n    print(f\"  {r.nmi_code}: {r.kcdb_code}, {r.individual_service_value}\")\n</code></pre>"},{"location":"examples/physics/#output","title":"Output","text":"<p>Running this script outputs the following, although, some values may change from what you observe when you run this script since information in the KCDB is continually changing.</p> <pre><code>Get some reference data for General physics...\n  There are 7 metrology areas\n  There are 32 branches\nThere are 122 NMIs with fibre-optic capabilities...\n  BelGIM: COOMET-PR-BY-000007P6-1, Fibre optic power meter\n  BelGIM: COOMET-PR-BY-000007P5-1, Fibre optic power meter\n  CENAM: SIM-PR-MX-00000GET-1, Fibre optic power meter\n  CENAM: SIM-PR-MX-00000GEK-2, Length, optical fibre\n  CENAM: SIM-PR-MX-00000GEH-4, Optical spectrum analyser\n  CMI: EURAMET-PR-CZ-000008P7-1, Fibre optic source\n  CMI: EURAMET-PR-CZ-000008P8-1, Optical spectrum analyser\n  CMI: EURAMET-PR-CZ-000008P9-1, Wavelength meter\n  CMS: APMP-PR-TW-00000LD2-1, Fibre optic power meter\n  CMS: APMP-PR-TW-00000LD1-1, Fibre optic power meter\n  DFM: EURAMET-PR-DK-000004ZP-1, Fibre optic source\n  DFM: EURAMET-PR-DK-000004ZQ-1, Optical spectrum analyser\n  DFM: EURAMET-PR-DK-000004ZR-1, Optical spectrum analyser\n  DFM: EURAMET-PR-DK-000004ZV-1, Fibre optic power meter\n  DFM: EURAMET-PR-DK-000004ZO-1, Fibre optic source\n  IO-CSIC: EURAMET-PR-ES-00000BZ0-1, Fibre optic power meter\n  IO-CSIC: EURAMET-PR-ES-00000BYR-2, Dispersion slope, optical fibre\n  IO-CSIC: EURAMET-PR-ES-00000BYE-4, Dispersion, optical fibre\n  IO-CSIC: EURAMET-PR-ES-00000BYC-2, Optical spectrum analyser\n  IO-CSIC: EURAMET-PR-ES-00000BYF-3, Zero dispersion wavelength, optical fibre\n  IO-CSIC: EURAMET-PR-ES-00000BYQ-3, Dispersion, optical fibre\n  IO-CSIC: EURAMET-PR-ES-00000BZK-1, Fibre optic power meter\n  IO-CSIC: EURAMET-PR-ES-00000BYB-4, Fibre optic source\n  IO-CSIC: EURAMET-PR-ES-00000BYD-2, Optical spectrum analyser\n  KRISS: APMP-PR-KR-000009CO-3, Optical spectrum analyser\n  KRISS: APMP-PR-KR-000009DE-3, Length, optical fibre\n  KRISS: APMP-PR-KR-000009CR-1, Loss, optical fibre component\n  KRISS: APMP-PR-KR-000009DF-2, Length, optical fibre\n  KRISS: APMP-PR-KR-000009CP-6, Optical spectrum analyser\n  KRISS: APMP-PR-KR-000009DC-4, Fibre optic power meter\n  KRISS: APMP-PR-KR-000009DD-3, Fibre optic power meter\n  KRISS: APMP-PR-KR-000009CQ-2, Spectral attenuation, optical fibre\n  LAMETRO-ICE: SIM-PR-CR-00000NFW-2, Optical spectrum analyser\n  LAMETRO-ICE: SIM-PR-CR-00000NFX-2, Distance scale deviation, OTDR\n  LAMETRO-ICE: SIM-PR-CR-00000NG1-2, Location offset, OTDR\n  LAMETRO-ICE: SIM-PR-CR-00000NG2-2, Fibre optic power meter\n  LAMETRO-ICE: SIM-PR-CR-00000NFV-2, Fibre optic source\n  LNE: EURAMET-PR-FR-00000CLU-2, Fibre optic power meter\n  LNE: EURAMET-PR-FR-00000CLA-3, Optical spectrum analyser\n  LNE: EURAMET-PR-FR-00000CLS-2, Fibre optic power meter\n  LNE: EURAMET-PR-FR-00000CLT-2, Fibre optic power meter\n  LNE: EURAMET-PR-FR-00000CL9-3, Fibre optic source\n  METAS: EURAMET-PR-CH-00000DQA-1, Fibre optic source\n  METAS: EURAMET-PR-CH-00000DQB-1, Fibre optic source\n  METAS: EURAMET-PR-CH-00000DQE-1, Wavelength meter\n  METAS: EURAMET-PR-CH-00000DQG-1, Loss, optical fibre component\n  METAS: EURAMET-PR-CH-00000DQM-1, Location offset, OTDR\n  METAS: EURAMET-PR-CH-00000DQV-1, Fibre optic power meter\n  METAS: EURAMET-PR-CH-00000DQY-2, Dispersion slope, optical fibre\n  METAS: EURAMET-PR-CH-00000DQ9-1, Fibre optic source\n  METAS: EURAMET-PR-CH-00000DQD-1, Wavelength meter\n  METAS: EURAMET-PR-CH-00000DQF-1, Spectral attenuation, optical fibre\n  METAS: EURAMET-PR-CH-00000DQL-1, Location offset, OTDR\n  METAS: EURAMET-PR-CH-00000DQW-1, Fibre optic power meter\n  METAS: EURAMET-PR-CH-00000DQH-2, Dispersion, optical fibre\n  METAS: EURAMET-PR-CH-00000DQI-2, Zero dispersion wavelength, optical fibre\n  METAS: EURAMET-PR-CH-00000DQC-1, Optical spectrum analyser\n  METAS: EURAMET-PR-CH-00000DQJ-1, Length, optical fibre\n  METAS: EURAMET-PR-CH-00000DQK-1, Length, optical fibre\n  METAS: EURAMET-PR-CH-00000DQX-2, Dispersion, optical fibre\n  MIKES-Aalto: EURAMET-PR-FI-000005K4-1, Fibre optic source\n  MIKES-Aalto: EURAMET-PR-FI-000005K5-1, Optical spectrum analyser\n  MIKES-Aalto: EURAMET-PR-FI-000005L8-1, Fibre optic power meter\n  MIKES-Aalto: EURAMET-PR-FI-000005L9-1, Fibre optic power meter\n  NIM: APMP-PR-CN-00000KAZ-1, Fibre optic power meter\n  NIM: APMP-PR-CN-00000KB1-1, Fibre optic source\n  NIM: APMP-PR-CN-00000KB0-2, Fibre optic power meter\n  NIM: APMP-PR-CN-00000KB2-1, Optical spectrum analyser\n  NIM: APMP-PR-CN-00000KB3-1, Optical spectrum analyser\n  NIS: AFRIMETS-PR-EG-00000N9Q-1, Fibre optic source\n  NIS: AFRIMETS-PR-EG-00000N9S-1, Optical spectrum analyser\n  NIS: AFRIMETS-PR-EG-00000P1H-1, Wavelength standard\n  NIS: AFRIMETS-PR-EG-00000N9R-1, Fibre optic source\n  NIST: SIM-PR-US-00000A2N-2, Fibre optic power meter\n  NMC, A*STAR: APMP-PR-SG-0000098Y-1, Optical spectrum analyser\n  NMC, A*STAR: APMP-PR-SG-0000099P-1, Fibre optic power meter\n  NMC, A*STAR: APMP-PR-SG-0000098Z-1, Optical spectrum analyser\n  NMC, A*STAR: APMP-PR-SG-0000099Q-1, Fibre optic power meter\n  NMC, A*STAR: APMP-PR-SG-0000099R-1, Fibre optic power meter\n  NMIJ AIST: APMP-PR-JP-000005SY-1, Fibre optic power meter\n  NMIJ AIST: APMP-PR-JP-000005SU-2, Fibre optic power meter\n  NMIJ AIST: APMP-PR-JP-000005SV-2, Fibre optic power meter\n  NMIJ AIST: APMP-PR-JP-000005SX-2, Fibre optic power meter\n  NMIJ AIST: APMP-PR-JP-000005SZ-1, Fibre optic power meter\n  NMIJ AIST: APMP-PR-JP-000005T0-1, Fibre optic power meter\n  NMIJ AIST: APMP-PR-JP-000005ST-2, Fibre optic power meter\n  NMIJ AIST: APMP-PR-JP-000005SW-2, Fibre optic power meter\n  NMIM: APMP-PR-MY-00000830-1, Fibre optic power meter\n  NMIM: APMP-PR-MY-0000082Z-1, Fibre optic power meter\n  NMISA: AFRIMETS-PR-ZA-000006FJ-1, Fibre optic source\n  NMISA: AFRIMETS-PR-ZA-000006FK-1, Optical spectrum analyser\n  NMISA: AFRIMETS-PR-ZA-000006FL-1, Fibre optic power meter\n  NPL: EURAMET-PR-GB-000008SJ-2, Fibre optic power meter\n  NPL: EURAMET-PR-GB-000008SI-2, Fibre optic power meter\n  NPL: EURAMET-PR-GB-000008SH-2, Fibre optic power meter\n  PTB: EURAMET-PR-DE-00000C10-2, Fibre optic power meter\n  PTB: EURAMET-PR-DE-00000C03-6, Fibre optic source\n  PTB: EURAMET-PR-DE-00000C04-2, Fibre optic source\n  RISE: EURAMET-PR-SE-00000AYY-1, Optical spectrum analyser\n  RISE: EURAMET-PR-SE-00000AYZ-1, Optical spectrum analyser\n  RISE: EURAMET-PR-SE-00000AZ2-1, Fibre optic source\n  RISE: EURAMET-PR-SE-00000AZN-1, Fibre optic power meter\n  RISE: EURAMET-PR-SE-00000AZO-1, Fibre optic power meter\n  RISE: EURAMET-PR-SE-00000AZ1-1, Fibre optic source\n  RISE: EURAMET-PR-SE-00000AZP-1, Fibre optic power meter\n  RISE: EURAMET-PR-SE-00000AYX-1, Fibre optic source\n  RISE: EURAMET-PR-SE-00000AZ0-1, Optical spectrum analyser\n  SMU: EURAMET-PR-SK-0000054W-1, Fibre optic source\n  SMU: EURAMET-PR-SK-0000054X-1, Optical spectrum analyser\n  VNIIOFI: COOMET-PR-RU-00000DLD-1, Dispersion, optical fibre\n  VNIIOFI: COOMET-PR-RU-00000DLF-1, Zero dispersion wavelength, optical fibre\n  VNIIOFI: COOMET-PR-RU-00000DLG-1, Dispersion slope, optical fibre\n  VNIIOFI: COOMET-PR-RU-00000DN5-1, Fibre optic power meter\n  VNIIOFI: COOMET-PR-RU-00000NTK-1, Measuring instrument\n  VNIIOFI: COOMET-PR-RU-00000DLC-1, Dispersion, optical fibre\n  VNIIOFI: COOMET-PR-RU-00000DLE-1, Zero dispersion wavelength, optical fibre\n  VNIIOFI: COOMET-PR-RU-00000DLH-1, Dispersion slope, optical fibre\n  VNIIOFI: COOMET-PR-RU-00000DN4-1, Fibre optic power meter\n  VNIIOFI: COOMET-PR-RU-00000N9K-1, Wavelength meter\n  VNIIOFI: COOMET-PR-RU-00000N95-1, Fibre optic source\n  VNIIOFI: COOMET-PR-RU-00000N9J-1, Optical spectrum analyser\n  VNIIOFI: COOMET-PR-RU-00000N9L-1, Optical fibre\n</code></pre>"}]}